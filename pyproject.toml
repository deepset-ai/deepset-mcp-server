[project]
name = "deepset-mcp"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.115.12",
    "mcp[cli]>=1.6.0",
    "requests>=2.32.3",
    "uvicorn>=0.34.2",
    "httpx>=0.24.1",
    "typing-extensions>=4.7.0",
]

[project.scripts]
deepset-mcp = "deepset_mcp.main:launch_mcp"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/deepset_mcp"]

[dependency-groups]
dev = [
  "pytest"
]
lint = [
    "ruff",
]

types = [
    "mypy",
    "types-requests"
]

[tool.pytest.ini_options]
testpaths = ["test"]

[tool.ruff]
line-length = 120
target-version = "py311"
include = ["pyproject.toml", "src/**/*.py", "test/**/*.py"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "D",   # docstrings
]
ignore = [
    "D100", # Ok to not have docstring for public modules
    "D104", # Ok to not have docstring for public package
    "D401", # First line of docstring in imperative mode
]
isort = { combine-as-imports = true, known-first-party = ["deepset_mcp"] }

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.mypy]
strict = true



